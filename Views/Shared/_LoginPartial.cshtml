﻿@using Microsoft.AspNetCore.Identity
@using Restaurant.Models.Identity
@inject SignInManager<BaseUserModel> SignInManager
@inject UserManager<BaseUserModel> UserManager
@{
}
    
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            @{
                int cartCount = 0;
                if (Context.Session.Get<OrderViewModel>("OrderViewModel") != null)
                {
                    OrderViewModel model = Context.Session.Get<OrderViewModel>("OrderViewModel");
                    cartCount = model.OrderItems.Sum(product => product.Quantity);
                }
            }
            <a class="nav-link position-relative" asp-action="Cart" asp-controller="Order">
                <i class="bi bi-cart2"></i>
                <span class="position-absolute start-100 translate-middle badge rounded-pill bg-success">
                    @cartCount
                    <span class="visually-hidden">Cart Quantity</span>
                </span>
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" title="Manage">Hello @User.Identity?.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-action="LogOut" asp-controller="Authentication" method="post">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" href="@Url.Action("CreateUser", "Authentication")">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" href="@Url.Action("LoginUser", "Authentication")">Login</a>
        </li>
    }
</ul>